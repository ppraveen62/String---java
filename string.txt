StringBuffer and StringBuilder

StringBuffer:

•StringBuffer is mutable. It means one can change the value of the object.
•The objects created using StringBuffer are stored in the heap.
•It is thread-safe.
•Its performance is affected due to its thread-safe property. Hence, StringBuffer is slower than StringBuilder.

StringBuffer sbr= new StringBuffer (“example1”);

StringBuilder:

•StringBuilder is mutable like StringBuffer.
•It is not thread-safe.
•StringBuilder is faster than StringBuffer.

StringBuilder slr= new StringBuilder(“example2”);



StringBuffer Example
BufferTest.java




//Java Program to demonstrate the use of StringBuffer class.  
public class BufferTest{  
    public static void main(String[] args){  
        StringBuffer buffer=new StringBuffer("hello");  
        buffer.append("java");  
        System.out.println(buffer);  
    }  
}  
Output:

hellojava


StringBuilder Example
BuilderTest.java

//Java Program to demonstrate the use of StringBuilder class.  
public class BuilderTest{  
    public static void main(String[] args){  
        StringBuilder builder=new StringBuilder("hello");  
        builder.append("java");  
        System.out.println(builder);  
    }  
}  
Output:

hellojava





Performance Test of StringBuffer and StringBuilder
Let's see the code to check the performance of StringBuffer and StringBuilder classes.

ConcatTest.java

//Java Program to demonstrate the performance of StringBuffer and StringBuilder classes.  
public class ConcatTest{  
    public static void main(String[] args){  
        long startTime = System.currentTimeMillis();  
        StringBuffer sb = new StringBuffer("Java");  
        for (int i=0; i<10000; i++){  
            sb.append("Tpoint");  
        }  
        System.out.println("Time taken by StringBuffer: " + (System.currentTimeMillis() - startTime) + "ms");  
        startTime = System.currentTimeMillis();  
        StringBuilder sb2 = new StringBuilder("Java");  
        for (int i=0; i<10000; i++){  
            sb2.append("Tpoint");  
        }  
        System.out.println("Time taken by StringBuilder: " + (System.currentTimeMillis() - startTime) + "ms");  
    }  
}  
Output:

Time taken by StringBuffer: 16ms
Time taken by StringBuilder: 0ms